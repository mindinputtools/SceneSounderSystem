@page "/yolo"
@using WebUI.Services
@using Yolov5Net.Scorer
@inject ObjDetectYoloClient yoloClient
<h1>Object detection with YOLO</h1>
<div>
    <button @(autoSpeak ? disabled : null) @onclick="DetectClicked">Detect objects from camera</button>
    <button @(autoSpeak ? disabled : null) @onclick="ToggleSpeak">@(speakResult ? "Speak result" : "Don't speak result'")</button>
    <button @onclick="ToggleAutoSpeak">@(autoSpeak ? "Auto speak is on" : "Auto speak is off")</button>
</div>
@if (!autoSpeak) {
<div>
    <h2>Result</h2>
    @if (loading)
    {
        <p>Loading detection results...</p>
    }
    else
    {
        if (!predictions.Any())
        {
            <p>No results to show</p>
        }
        foreach (var result in predictions)
        {
            <p>@result.Label.Name</p>
        }
        <p><img src="http://camera-api:8080/api/camera/image" width=400 height=400 alt="Image preview" /></p>
    }
</div>
}
@code {
    private IEnumerable<YoloPrediction> predictions = new List<YoloPrediction>();
    private bool speakResult = true;
    private bool autoSpeak = false;
    private bool loading = false;
    private async Task DetectClicked()
    {
        loading = true;
        predictions = await yoloClient.YoloPredictions(speak: speakResult);
        loading = false;
    }
    private void ToggleSpeak()
    {
        speakResult = !speakResult;
    }
    private void ToggleAutoSpeak()
    {
        autoSpeak = !autoSpeak;
    }

}
